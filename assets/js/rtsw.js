class SolarWindCharts{constructor(){this.magChart=null,this.densityChart=null,this.speedChart=null,this.temperatureChart=null,this.initCharts()}initCharts(){const t={responsive:!0,maintainAspectRatio:!1,animation:!1,elements:{point:{radius:0},line:{borderWidth:1}},scales:{x:{grid:{color:"rgba(0, 0, 0, 0.1)",drawBorder:!0},ticks:{maxRotation:0,font:{size:10},callback:function(t){const a=this.getLabelForValue(t),e=parseInt(a.split(":")[0]);parseInt(a.split(":")[1]);return e%3==0?a:""}}},y:{grid:{color:"rgba(0, 0, 0, 0.1)",drawBorder:!0},ticks:{font:{size:10}}}},plugins:{legend:{display:!1}}},a={...t,scales:{...t.scales,x:{...t.scales.x,display:!1}}},e={id:"leftLegend",afterDraw:t=>{const{ctx:a,chartArea:e,scales:s}=t,{left:l,top:i}=e,r=t.data.datasets;a.textAlign="left",a.textBaseline="middle",a.font="12px Arial",r.forEach(((t,e)=>{const i=s.y.getPixelForValue(s.y.max-e*(s.y.max-s.y.min)/4);a.strokeStyle=t.borderColor,a.beginPath(),a.moveTo(l-50,i),a.lineTo(l-35,i),a.stroke(),a.fillStyle=t.borderColor,a.fillText(t.label,l-30,i)}))}},s=document.getElementById("magChart").getContext("2d");this.magChart=new Chart(s,{type:"line",data:{labels:[],datasets:[{label:"Bx",data:[],borderColor:"black",tension:0},{label:"By",data:[],borderColor:"blue",tension:0},{label:"Bz",data:[],borderColor:"red",tension:0}]},options:{...a,plugins:{leftLegend:{},legend:{display:!1}},scales:{...a.scales,y:{...a.scales.y,min:-10,max:10,position:"right",title:{display:!1},ticks:{callback:function(t){return t}}}}}});const l=document.getElementById("densityChart").getContext("2d");this.densityChart=new Chart(l,{type:"line",data:{labels:[],datasets:[{label:"Density (n/cm\xb3)",data:[],borderColor:"orange",tension:0}]},options:{...a,plugins:{leftLegend:{},legend:{display:!1}},scales:{...a.scales,y:{...a.scales.y,type:"logarithmic",min:.1,max:100,position:"right",title:{display:!1},ticks:{callback:function(t){return t}}}}}});const i=document.getElementById("speedChart").getContext("2d");this.speedChart=new Chart(i,{type:"line",data:{labels:[],datasets:[{label:"Speed (km/s)",data:[],borderColor:"purple",tension:0}]},options:{...a,plugins:{leftLegend:{},legend:{display:!1}},scales:{...a.scales,y:{...a.scales.y,min:200,max:800,position:"right",title:{display:!1},ticks:{callback:function(t){return t}}}}}});const r=document.getElementById("temperatureChart").getContext("2d");this.temperatureChart=new Chart(r,{type:"line",data:{labels:[],datasets:[{label:"Temperature (K)",data:[],borderColor:"green",tension:0}]},options:{...t,scales:{...t.scales,y:{...t.scales.y,type:"logarithmic",min:1e4,max:1e6,position:"right",title:{display:!1},ticks:{callback:function(t){return t}}}}}}),Chart.register(e)}updateCharts(t,a){const e=t=>new Date(t).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),s=t.map((t=>e(t[0]))),l=t.map((t=>parseFloat(t[1]))),i=t.map((t=>parseFloat(t[2]))),r=t.map((t=>parseFloat(t[3])));this.magChart.data.labels=s,this.magChart.data.datasets[0].data=l,this.magChart.data.datasets[1].data=i,this.magChart.data.datasets[2].data=r,this.magChart.update();const n=a.map((t=>e(t[0]))),o=a.map((t=>parseFloat(t[1]))),d=a.map((t=>parseFloat(t[2]))),c=a.map((t=>parseFloat(t[3])));this.densityChart.data.labels=n,this.densityChart.data.datasets[0].data=o,this.densityChart.update(),this.speedChart.data.labels=n,this.speedChart.data.datasets[0].data=d,this.speedChart.update(),this.temperatureChart.data.labels=n,this.temperatureChart.data.datasets[0].data=c,this.temperatureChart.update()}}document.addEventListener("DOMContentLoaded",(async()=>{async function t(){try{const[t,e]=await Promise.all([fetch("https://services.swpc.noaa.gov/products/solar-wind/mag-1-day.json"),fetch("https://services.swpc.noaa.gov/products/solar-wind/plasma-1-day.json")]),s=await t.json(),l=await e.json();s.shift(),l.shift(),a.updateCharts(s,l)}catch(t){}}const a=new SolarWindCharts;await t(),setInterval(t,3e5)}));