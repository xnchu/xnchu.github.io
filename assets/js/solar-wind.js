async function fetchSolarWindData(){try{const[a,t]=await Promise.all([fetch("https://services.swpc.noaa.gov/products/solar-wind/plasma-1-day.json"),fetch("https://services.swpc.noaa.gov/products/solar-wind/mag-1-day.json")]),e=await a.json();return{plasmaData:e,magneticData:await t.json()}}catch(a){return null}}function processData(a,t=!0){const e=t?1:0;return{timestamps:a.slice(e).map((a=>new Date(a[0]).toLocaleTimeString())),values:a.slice(e)}}function createSolarWindChart(a,t){const e=document.getElementById("solarWindChart").getContext("2d"),i=processData(a),r=processData(t);return new Chart(e,{type:"line",data:{labels:i.timestamps,datasets:[{label:"Bx (nT)",data:r.values.map((a=>a[1])),borderColor:"rgb(75, 192, 192)",yAxisID:"magnetic"},{label:"By (nT)",data:r.values.map((a=>a[2])),borderColor:"rgb(255, 99, 132)",yAxisID:"magnetic"},{label:"Bz (nT)",data:r.values.map((a=>a[3])),borderColor:"rgb(255, 205, 86)",yAxisID:"magnetic"},{label:"Density (n/cm\xb3)",data:i.values.map((a=>a[1])),borderColor:"rgb(153, 102, 255)",yAxisID:"density"},{label:"Speed (km/s)",data:i.values.map((a=>a[2])),borderColor:"rgb(54, 162, 235)",yAxisID:"speed"},{label:"Temperature (K)",data:i.values.map((a=>a[3])),borderColor:"rgb(255, 159, 64)",yAxisID:"temperature"}]},options:{responsive:!0,interaction:{mode:"index",intersect:!1},scales:{x:{display:!0,title:{display:!0,text:"Time (UTC)"}},magnetic:{position:"left",title:{display:!0,text:"Magnetic Field (nT)"},grid:{drawOnChartArea:!0}},density:{position:"left",title:{display:!0,text:"Density (n/cm\xb3)"},grid:{drawOnChartArea:!1}},speed:{position:"left",title:{display:!0,text:"Speed (km/s)"},grid:{drawOnChartArea:!1}},temperature:{position:"left",title:{display:!0,text:"Temperature (K)"},grid:{drawOnChartArea:!1}}},layout:{padding:{top:20,right:20,bottom:20,left:20}}}})}async function initializeChart(){const a=await fetchSolarWindData();a&&createSolarWindChart(a.plasmaData,a.magneticData)}document.addEventListener("DOMContentLoaded",initializeChart),setInterval(initializeChart,3e5);